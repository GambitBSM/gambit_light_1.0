function(add_gambit_deps obj_name)

    if(MPI_CXX_FOUND)
        target_link_libraries(${obj_name} ${MPI_CXX_LIBRARIES})
        #if(MPI_CXX_LINK_FLAGS)
        #    target_link_libraries(${obj_name} ${MPI_CXX_LINK_FLAGS})
        #endif()
    endif()
    if(MPI_C_FOUND)
        target_link_libraries(${obj_name} ${MPI_C_LIBRARIES})
        #if(MPI_C_LINK_FLAGS)
        #    target_link_libraries(${obj_name} ${MPI_C_LINK_FLAGS})
        #endif()
    endif()
    if(MPI_Fortran_FOUND)
        target_link_libraries(${obj_name} ${MPI_Fortran_LIBRARIES})
        #if(MPI_Fortran_LINK_FLAGS)
        #    target_link_libraries(${obj_name} ${MPI_Fortran_LINK_FLAGS})
        #endif()
    endif()
    if(SQLite3_FOUND)
        target_link_libraries(${obj_name} ${SQLite3_LIBRARIES})
    endif()
    if (LIBDL_FOUND)
        target_link_libraries(${obj_name} ${LIBDL_LIBRARY})
    endif()
    if (GSL_FOUND)
        if(HDF5_FOUND AND "${USE_MATH_LIBRARY_CHOSEN_BY}" STREQUAL "HDF5")
            strip_library(m GSL_LIBRARIES)
        endif()
        target_link_libraries(${obj_name} ${GSL_LIBRARIES})
    endif()
    if(HDF5_FOUND)
        if(GSL_FOUND AND "${USE_MATH_LIBRARY_CHOSEN_BY}" STREQUAL "GSL")
            strip_library(m HDF5_LIBRARIES)
        endif()
        target_link_libraries(${obj_name} ${HDF5_LIBRARIES})
    endif()
    if(Mathematica_FOUND AND Mathematica_WSTP_FOUND)
        target_link_libraries(${obj_name} ${Mathematica_WSTP_LIBRARIES})
    endif()
    #if(pybind11_FOUND)
    #    target_link_libraries(${obj_name} ${PYTHON_LIBRARIES})
    #endif()
    if(SQLITE3_FOUND)
        target_link_libraries(${obj_name} ${SQLITE3_LIBRARIES})
    endif()
    
    #if(EXISTS "${PROJECT_SOURCE_DIR}/Elements/")
    #    if (NOT EXCLUDE_FLEXIBLESUSY)
    #        target_link_libraries(${obj_name} ${flexiblesusy_LDFLAGS})
    #    endif()
    #endif()
    
    #if(EXISTS "${PROJECT_SOURCE_DIR}/Elements/")
    #    if (NOT EXCLUDE_FLEXIBLESUSY)
    #        add_dependencies(${obj_name} flexiblesusy)
    #    endif()
    #else()
    #    # Make sure the printers compile OK if the rest of GAMBIT is missing
    #    target_compile_definitions(Printers PRIVATE SCANNER_STANDALONE)
    #endif()
    
    add_dependencies(${obj_name} mkpath)

endfunction()
