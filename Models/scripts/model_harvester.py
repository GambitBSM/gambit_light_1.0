#!/usr/bin/env python
#
# GAMBIT: Global and Modular BSM Inference Tool
#*********************************************
# \file
#
#  Model harvesting script.
#  Generates model_rollcall.hpp
#
#  This script identifies all the headers that
#  define GAMBIT models, and includes them
#  in model_rollcall unless asked not to.
#
#*********************************************
#
#  Authors (add name and date if you modify):
#
#  \author Pat Scott
#          (patscott@physics.mcgill.ca)
#    \date 2014 Nov
#
#  \author Ben Farmer
#          (b.farmer@imperial.ac.uk)
#  \date 2018 Oct
#
#*********************************************
import os

toolsfile="./Utils/scripts/harvesting_tools.py"
exec(compile(open(toolsfile, "rb").read(), toolsfile, 'exec')) # Python 2/3 compatible version of 'execfile'

def main(argv):

    model_headers=set([])
    model_type_headers = set([])

    # Handle command line options
    verbose = False
    try:
        opts, args = getopt.getopt(argv,"vx:",["verbose","exclude-models="])
    except getopt.GetoptError:
        print('Usage: model_harvestor.py [flags]')
        print(' flags:')
        print('        -v : More verbose output')
        sys.exit(2)
    for opt, arg in opts:
      if opt in ('-v','--verbose'):
        verbose = True
        print('model_harvester.py: verbose=True')

    # Get list of models to include in models_rollcall.hpp
    model_headers.update(retrieve_generic_headers(verbose,"./Models/include/gambit/Models/models","model", set()))
    # Get lists of model type header files
    model_type_headers.update(retrieve_generic_headers(verbose,"./Models/include/gambit/Models/model_types","model type", set()))

    if verbose:
        print("Model headers identified:")
        for h in model_headers:
            print('  gambit/Models/models/'+h)
        print("Model type headers identified:")
        for h in model_type_headers:
            print('  gambit/Models/model_types/'+h)

    # Generate a c++ header containing all the model headers we have just harvested.
    towrite = """//   GAMBIT: Global and Modular BSM Inference Tool
//   *********************************************
///  \\file                                       
///                                               
///  Compile-time registration of GAMBIT models.  
///                                               
///  This file was automatically generated by     
///  model_harvester.py. Do not modify.           
///                                               
///  Do not add to this if you want to add a new  
///  model -- just add your model header to       
///  Models/include/gambit/Models/models and rest 
///  assured that model_harvester.py will make    
///  sure it ends up here.                        
///                                               
///  *********************************************
///                                               
///  Authors (add name and date if you modify):   
///                                               
///  \\author The GAMBIT Collaboration            
///  \\date """+datetime.datetime.now().strftime("%I:%M%p on %B %d, %Y")+"""
///                                               
///  *********************************************
                                                  
#ifndef __model_rollcall_hpp__                    
#define __model_rollcall_hpp__                    
                                                  
// Include the model macro definitions            
#include \"gambit/Models/model_macros.hpp\"       
                                                  
// Automatically-generated list of models.        
"""

    for h in model_headers:
        towrite+='#include \"gambit/Models/models/{0}\"\n'.format(h)
    towrite+="\n#endif // defined __model_rollcall_hpp__\n"

    with open("./Models/include/gambit/Models/model_rollcall.hpp","w") as f:
        f.write(towrite)

    # Generate a c++ header containing all the model type headers we have just harvested.
    towrite = """//   GAMBIT: Global and Modular BSM Inference Tool
//   *********************************************
///  \\file                                       
///                                               
///  Compile-time registration of GAMBIT model    
///  types.                                       
///                                               
///  This file was automatically generated by     
///  model_harvester.py. Do not modify.           
///                                               
///  Do not add to this if you want to add new    
///  types associated with a new (or old) model.  
///  Just add your model type header to           
///  Models/include/gambit/Models/model_types and 
///  rest assured that model_harvester.py will    
///  make sure it ends up here.                   
///                                               
///  *********************************************
///                                               
///  Authors (add name and date if you modify):   
///                                               
///  \\author The GAMBIT Collaboration            
///  \\date """+datetime.datetime.now().strftime("%I:%M%p on %B %d, %Y")+"""
///                                               
///  *********************************************
                                                  
#ifndef __model_types_rollcall_hpp__              
#define __model_types_rollcall_hpp__              
                                                  
// Automatically-generated list of model types.   
"""

    for h in model_type_headers:
        towrite+='#include \"gambit/Models/model_types/{0}\"\n'.format(h)
    towrite+="\n#endif // defined __model_types_rollcall_hpp__\n"

    with open("./Models/include/gambit/Models/model_types_rollcall.hpp","w") as f:
        f.write(towrite)

    if verbose:
        print("\nGenerated model_rollcall.hpp.")
        print("Generated model_types_rollcall.hpp.\n")

# Handle command line arguments (verbosity)
if __name__ == "__main__":
   main(sys.argv[1:])

